version: '3.8'

services:
  # L&A Logistics Web Application
  lalogistics-app:
    build: .
    container_name: lalogistics-web
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://mongo:27017/lalogistics
      - SESSION_SECRET=1483b2df329fa683fee27ef1b2c3d4e5
      - PORT=3000
    volumes:
      # Persist uploaded files
      - uploads-data:/app/public/uploads
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - lalogistics-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # MongoDB Database
  mongo:
    image: mongo:6.0
    container_name: lalogistics-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=lalogistics
    volumes:
      # Persist database data
      - mongo-data:/data/db
      # Optional: Add custom MongoDB configuration
      # - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - lalogistics-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Optional: MongoDB Admin Interface (Mongo Express)
  mongo-express:
    image: mongo-express:latest
    container_name: lalogistics-mongo-admin
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin123
    depends_on:
      - mongo
    networks:
      - lalogistics-network

# Named volumes for data persistence
volumes:
  mongo-data:
    driver: local
  uploads-data:
    driver: local

# Custom network for service communication
networks:
  lalogistics-network:
    driver: bridge
