<div class="container-fluid">
  <div class="row">
    <div class="col-md-12">
      <div class="card">
        <div class="card-header">
          <h3 class="card-title">
            <i class="fas fa-upload me-2"></i> Import SPX Automation Data
          </h3>
          <div class="card-tools">
            <a href="/audit/list" class="btn btn-sm btn-secondary">
              <i class="fas fa-arrow-left me-1"></i> Back to Audit List
            </a>
          </div>
        </div>
        <div class="card-body">
          
          <% if (typeof error !== 'undefined' && error) { %>
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
              <i class="fas fa-exclamation-triangle me-2"></i>
              <%= error %>
              <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
          <% } %>

          <% if (typeof results !== 'undefined' && results) { %>
            <div class="alert alert-info alert-dismissible fade show" role="alert">
              <i class="fas fa-info-circle me-2"></i>
              <strong>Partial Import Results:</strong>
              Imported: <%= results.importedCount %>, 
              Skipped: <%= results.skippedCount %>, 
              Errors: <%= results.errorCount %>
              <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
          <% } %>

          <!-- Instructions -->
          <div class="row mb-4">
            <div class="col-md-12">
              <div class="alert alert-info">
                <h5><i class="fas fa-info-circle me-2"></i> Import Instructions</h5>
                <ul class="mb-0">
                  <li><strong>File Format:</strong> JSON files generated by SPX automation script</li>
                  <li><strong>Status Filter:</strong> Only tasks with "Done" status will be imported</li>
                  <li><strong>Duplicate Check:</strong> Existing entries will be skipped automatically</li>
                  <li><strong>Data Mapping:</strong> Each sender ID will create a separate audit entry</li>
                  <li><strong>Calculations:</strong> Earnings will be calculated automatically using SPX rules</li>
                </ul>
              </div>
            </div>
          </div>

          <!-- Upload Form -->
          <form method="POST" action="/audit/import/spx" enctype="multipart/form-data" id="importForm">
            <div class="row">
              <div class="col-md-8">
                <div class="form-group mb-3">
                  <label for="jsonFile" class="form-label">
                    <i class="fas fa-file-upload me-1"></i> Select SPX JSON File
                  </label>
                  <input type="file" 
                         id="jsonFile" 
                         name="jsonFile" 
                         class="form-control" 
                         accept=".json"
                         required>
                  <small class="text-muted">
                    Choose the JSON file generated by your SPX automation script.
                    Maximum file size: 10MB
                  </small>
                </div>
              </div>
              <div class="col-md-4">
                <div class="form-group mb-3">
                  <label class="form-label">&nbsp;</label>
                  <div class="d-grid">
                    <button type="submit" class="btn btn-primary" id="importBtn">
                      <i class="fas fa-upload me-1"></i> Import Data
                    </button>
                  </div>
                </div>
              </div>
            </div>
          </form>

          <!-- Expected JSON Format -->
          <div class="row mt-4">
            <div class="col-md-12">
              <div class="card">
                <div class="card-header">
                  <h5 class="mb-0">
                    <i class="fas fa-code me-2"></i> Expected JSON Format
                  </h5>
                </div>
                <div class="card-body">
                  <p>Your JSON file should contain an array of task objects with this structure:</p>
                  <pre><code>[
  {
    "receive_task_id": "DRT2025080401VEC",
    "complete_time": "2025-08-06 14:30:00",
    "status": "Done",
    "sender_data": {
      "1257601721": 25,
      "1234567890": 18
    },
    "total_quantity": 43,
    "sender_count": 2,
    "processed_at": "2025-08-06T14:30:00.000Z"
  }
]</code></pre>
                  <div class="mt-2">
                    <small class="text-muted">
                      <strong>Key Fields:</strong><br>
                      • <code>receive_task_id</code>: SPX task identifier<br>
                      • <code>status</code>: Must be "Done" to be imported<br>
                      • <code>sender_data</code>: Object with sender IDs as keys and tracking counts as values<br>
                      • <code>complete_time</code>: Task completion timestamp (optional)
                    </small>
                  </div>
                </div>
              </div>
            </div>
          </div>

          <!-- Import Process -->
          <div class="row mt-4">
            <div class="col-md-12">
              <div class="card">
                <div class="card-header">
                  <h5 class="mb-0">
                    <i class="fas fa-cogs me-2"></i> Import Process
                  </h5>
                </div>
                <div class="card-body">
                  <div class="row">
                    <div class="col-md-6">
                      <h6><i class="fas fa-check-circle text-success me-1"></i> What Gets Imported:</h6>
                      <ul class="small">
                        <li>Tasks with "Done" status only</li>
                        <li>Each sender ID becomes a separate audit entry</li>
                        <li>Tracking count becomes numberOfParcels</li>
                        <li>Task completion time sets the audit date</li>
                        <li>SLA compliance assumed (can be edited later)</li>
                      </ul>
                    </div>
                    <div class="col-md-6">
                      <h6><i class="fas fa-times-circle text-warning me-1"></i> What Gets Skipped:</h6>
                      <ul class="small">
                        <li>Tasks with non-"Done" status</li>
                        <li>Duplicate entries (same task + sender + date)</li>
                        <li>Senders with zero tracking numbers</li>
                        <li>Invalid or malformed data</li>
                      </ul>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>

        </div>
      </div>
    </div>
  </div>
</div>

<script>
document.getElementById('importForm').addEventListener('submit', function(e) {
  const fileInput = document.getElementById('jsonFile');
  const importBtn = document.getElementById('importBtn');
  
  if (!fileInput.files[0]) {
    e.preventDefault();
    alert('Please select a JSON file to import.');
    return;
  }
  
  // Show loading state
  importBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-1"></i> Importing...';
  importBtn.disabled = true;
  
  // Optional: Add file size check
  const file = fileInput.files[0];
  const maxSize = 10 * 1024 * 1024; // 10MB
  
  if (file.size > maxSize) {
    e.preventDefault();
    alert('File size too large. Maximum allowed size is 10MB.');
    importBtn.innerHTML = '<i class="fas fa-upload me-1"></i> Import Data';
    importBtn.disabled = false;
    return;
  }
});

// File input validation
document.getElementById('jsonFile').addEventListener('change', function(e) {
  const file = e.target.files[0];
  if (file && !file.name.toLowerCase().endsWith('.json')) {
    alert('Please select a valid JSON file.');
    this.value = '';
  }
});
</script>
